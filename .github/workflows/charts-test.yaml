name: "Charts: Test"

on:
  workflow_call:
    inputs:
      checkoutCommit:
        required: true
        type: string
      chartChangesDetected:
        required: true
        type: string
      modifiedCharts:
        required: true
        type: string

jobs:
  install-charts:
    name: Install charts
    strategy:
      matrix: ${{ fromJson(needs.generate-install-matrix.outputs.matrix1) }}
      fail-fast: false
      max-parallel: 4
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 1
          ref: ${{ inputs.checkoutCommit }}

      - name: Install go-yq
        run: |
          mkdir -p $HOME/.local/bin
          wget https://github.com/mikefarah/yq/releases/download/v4.26.1/yq_linux_amd64 -O $HOME/.local/bin/go-yq && \
          chmod +x $HOME/.local/bin/go-yq
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install Helm
        uses: azure/setup-helm@b9e51907a09c216f16ebe8536097933489208112 # v4
        with:
          version: v3.14.0

      - uses: actions/setup-python@8d9ed9ac5c53483de85588cdf95a591a75ab9f55 # v5
        with:
          python-version: "3.11"

      - name: Set up chart-testing
        uses: helm/chart-testing-action@0d28d3144d3a25ea2cc349d6e59901c4ff469b3b # v2.7.0

      - name: Update containerd config
        if: contains(matrix.chart, 'Spegel')
        run: |
          sudo mkdir -p /var/lib/rancher/k3s/agent/etc/containerd/
          sudo tee /var/lib/rancher/k3s/agent/etc/containerd/config.toml.tmpl > /dev/null <<EOL
          [plugins."io.containerd.grpc.v1.cri".registry]
             config_path = "/var/lib/rancher/k3s/agent/etc/containerd/certs.d"
          [plugins."io.containerd.grpc.v1.cri".containerd]
            snapshotter = "overlayfs"
            disable_snapshot_annotations = true
            discard_unpacked_layers = false
          EOL

      - name: Create k3d cluster
        uses: nolar/setup-k3d-k3s@v1
        with:
          version: latest
          # Flags found here https://github.com/k3d-io/k3d
          k3d-args: --k3s-arg --disable=metrics-server@server:*
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Remove node taints
        run: |
          kubectl taint --all=true nodes node.cloudprovider.kubernetes.io/uninitialized- || true

      - name: Prep Helm
        shell: bash
        run: |
          ./.github/scripts/prep_helm.sh

      - name: Add Dependencies
        shell: bash
        run: |
          ./.github/scripts/install_dependencies.sh "${{ matrix.chart }}"

      - name: Run chart-testing (install)
        run: |
          if [ -d "${{ matrix.chart }}/test-chart" ]; then
            ct install --config ".github/ct-install.yaml" --charts "${{ matrix.chart }}/test-chart"
          else
            ct install --config ".github/ct-install.yaml" --charts "${{ matrix.chart }}"
          fi

  install_success:
    needs:
      - install-charts
    if: ${{ always() }}
    name: Install successful
    runs-on: ubuntu-latest
    steps:
      - name: Check install status
        run: |
          res="${{needs.install-charts1.result}}"

          if [[ $res == "success" || $res == "skipped" ]]; then
            echo "Install test suite [1] was successful..."
          else
            echo "Install test suite [1] failed, stopping..."
            exit 1
          fi
